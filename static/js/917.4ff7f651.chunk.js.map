{"version":3,"file":"static/js/917.4ff7f651.chunk.js","mappings":"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","sources":["Routes/FormBuilder/FormTemplate/Builder/Services/ButtonClass.js","Routes/FormBuilder/FormTemplate/Builder/Services/LabelClass.js","Routes/FormBuilder/FormTemplate/Builder/Services/NumberClass.js","Routes/FormBuilder/FormTemplate/Builder/Services/PasswordClass.js","Routes/FormBuilder/FormTemplate/Builder/Services/RadioClass.js","Routes/FormBuilder/FormTemplate/Builder/Services/SelectClass.js","Routes/FormBuilder/FormTemplate/Builder/Services/TextAreaClass.js","Routes/FormBuilder/FormTemplate/Builder/Services/TextFieldClass.js","Routes/FormBuilder/FormTemplate/Builder/Services/SignatureClass.js","Routes/FormBuilder/FormTemplate/Builder/Services/DateTimeClass.js","Routes/FormBuilder/FormTemplate/Builder/Services/CheckBoxClass.js","Routes/FormBuilder/FormTemplate/Builder/Services/ImageClass.js","Routes/FormBuilder/FormTemplate/Builder/Services/NodeBuilder.js","Routes/FormBuilder/FormTemplate/Builder/custom-components/ActionController/index.jsx","Routes/FormBuilder/FormTemplate/Builder/custom-components/inputs/ButtonNode.jsx","Routes/FormBuilder/FormTemplate/Builder/custom-components/inputs/CheckBoxNode.jsx","Routes/FormBuilder/FormTemplate/Builder/custom-components/inputs/DateTimeNode.jsx","Routes/FormBuilder/FormTemplate/Builder/custom-components/inputs/ImageNode.jsx","Routes/FormBuilder/FormTemplate/Builder/custom-components/inputs/LabelNode.jsx","Routes/FormBuilder/FormTemplate/Builder/custom-components/inputs/NumberNode.jsx","Routes/FormBuilder/FormTemplate/Builder/custom-components/inputs/PasswordNode.jsx","Routes/FormBuilder/FormTemplate/Builder/custom-components/inputs/RadioNode.jsx","Routes/FormBuilder/FormTemplate/Builder/custom-components/inputs/SelectNode.jsx","Routes/FormBuilder/FormTemplate/Builder/custom-components/inputs/SignatureNode.jsx","Routes/FormBuilder/FormTemplate/Builder/custom-components/inputs/TextAreaNode.jsx","Routes/FormBuilder/FormTemplate/Builder/custom-components/inputs/TextField.jsx","Routes/FormBuilder/FormTemplate/Renderer/FormRenderer.jsx"],"sourcesContent":["\nclass ButtonClass {\n    defaultValue = {\n        text: \"button\",\n        name: \"button\",\n        type: \"primary\"\n    }\n    onChange(data) {\n    }\n}\n\nexport default ButtonClass;\n","class LabelClass {\n    defaultValue = {\n        id: \"\",\n        name: \"label\",\n        label: \"Label Class\",\n        value: \"text label\"\n    }\n    onChange(data) {\n    }\n}\n\nexport default LabelClass;\n","\nclass NumberClass {\n    defaultValue = {\n        label: \"Number input field\"\n    }\n    onChange(data) {\n    }\n}\n\nexport default NumberClass;\n","\nclass PasswordClass {\n    defaultValue = {\n        label: \"password field\"\n    }\n    onChange(data) {\n    }\n}\n\nexport default PasswordClass;\n","\nclass RadioClass {\n    defaultValue = {\n        label: \"Radio Label\",\n        name: \"radio\",\n        value: \"\",\n        defaultValue: \"\",\n        options: [{ label: \"option 1\", value: \"option1\" }]\n    }\n    onChange(data) {\n    }\n}\n\nexport default RadioClass;\n","\nclass SelectClass {\n    defaultValue = {\n        label: \"Select\",\n        name: \"selectField\",\n        value: [],\n        description: \"\",\n        options: [{ label: \"option 1\", value: \"option1\" }]\n    }\n    onChange(data) {\n    }\n}\n\nexport default SelectClass;","\nclass TextAreaClass {\n    defaultValue = {\n        label: \"Textarea\",\n        name: \"textareaField\",\n        placeholder: \"Type something here\",\n        rows: 3,\n        description: \"\",\n        prefix: \"\",\n        suffix: \"\",\n        autoComplete: \"\",\n        autoFocus: [],\n        isEditable: [],\n        defaultValue: \"\",\n        value: \"\"\n    }\n    onChange(data) {\n    }\n}\n\nexport default TextAreaClass;\n","class TextFieldClass {\n    defaultValue = {\n        label: \"Text Input\",\n        name: \"textField\",\n        placeholder: \"Type here\",\n        description: \"\",\n        tooltip: \"\",\n        prefix: \"\",\n        suffix: \"\",\n        autoComplete: \"\",\n        autoFocus: [],\n        isEditable: [],\n        defaultValue: \"\",\n        value: \"\"\n    }\n    onChange(data) {\n    }\n}\n\nexport default TextFieldClass;\n","class TextFieldClass {\n    defaultValue = {\n        label: \"Signature\",\n        name: \"signatureField\",\n        description: \"\",\n        value: \"\"\n    }\n    onChange(data) {\n    }\n}\n\nexport default TextFieldClass;\n","class DateTimeClass {\n    defaultValue = {\n        label: \"Date Label\",\n        value: \"\",\n        name: \"datefield\",\n        placeholder: \"Enter date\",\n        isClearable: false,\n        timeRequired: false\n    }\n    onChange(data) {\n    }\n}\n\nexport default DateTimeClass;\n","\nclass CheckBoxClass {\n    defaultValue = {\n        label: \"Checkbox\",\n        name: \"checkbox\",\n        value: \"\",\n        defaultValue: \"\",\n        options: [{ label: \"option 1\", value: \"option1\" }]\n    }\n    onChange(data) {\n    }\n}\n\nexport default CheckBoxClass;\n","class ImageClass {\n    defaultValue = {\n        name: \"Image\",\n        placeholder: \"Type here\",\n        tooltip: \"\",\n        method: \"static\",\n        imageURL: \"\",\n        defaultValue: \"\",\n        value: \"\",\n        style: { height: 100, width: 100 }\n    }\n    onChange(data) {\n    }\n}\n\nexport default ImageClass;\n","import ButtonClass from './ButtonClass';\nimport LabelClass from './LabelClass';\nimport NumberClass from './NumberClass';\nimport PasswordClass from './PasswordClass';\nimport RadioClass from './RadioClass';\nimport SelectClass from './SelectClass';\nimport TextAreaClass from './TextAreaClass';\nimport TextFieldClass from './TextFieldClass';\nimport SignatureClass from './SignatureClass';\nimport DateTimeClass from './DateTimeClass';\nimport CheckBoxClass from './CheckBoxClass';\nimport ImageClass from './ImageClass';\n\nconst getId = () => `dndnode_${Date.now()}`;\n\nconst buildInputNode = ({ type, position, id, style = {}, nodeData = {}, output = {} }) => {\n    let newNode = {\n        id: id || getId(),\n        type,\n        position,\n        output,\n        style,\n        data: { label: `${type} node` },\n    };\n    switch (type) {\n        case \"LabelNode\":\n            const LabelNode = new LabelClass();\n            newNode.data = {\n                ...newNode.data,\n                ...LabelNode.defaultValue,\n                ...nodeData,\n                onChange: LabelNode.onChange\n            }\n            break;\n        case \"TextFieldNode\":\n            const TextField = new TextFieldClass();\n            newNode.data = {\n                ...newNode.data,\n                ...TextField.defaultValue,\n                ...nodeData,\n                onChange: TextField.onChange\n            }\n            break;\n        case \"TextAreaNode\":\n            const TextArea = new TextAreaClass();\n            newNode.data = {\n                ...newNode.data,\n                ...TextArea.defaultValue,\n                ...nodeData,\n                onChange: TextArea.onChange\n            }\n            break;\n        case \"NumberNode\":\n            const InputNumber = new NumberClass();\n            newNode.data = {\n                ...newNode.data,\n                ...InputNumber.defaultValue,\n                ...nodeData,\n                onChange: InputNumber.onChange\n            }\n            break;\n        case \"ButtonNode\":\n            const inputButton = new ButtonClass();\n            newNode.data = {\n                ...newNode.data,\n                ...inputButton.defaultValue,\n                ...nodeData,\n                onChange: inputButton.onChange\n            }\n            break;\n        case \"PasswordNode\":\n            const PasswordNode = new PasswordClass();\n            newNode.data = {\n                ...newNode.data,\n                ...PasswordNode.defaultValue,\n                ...nodeData,\n                onChange: PasswordNode.onChange\n            }\n            break;\n        case \"CheckBoxNode\":\n            const CheckBoxNode = new CheckBoxClass();\n            newNode.data = {\n                ...newNode.data,\n                ...CheckBoxNode.defaultValue,\n                ...nodeData,\n                onChange: CheckBoxNode.onChange\n            }\n            break;\n        case \"RadioNode\":\n            const RadioNode = new RadioClass();\n            newNode.data = {\n                ...newNode.data,\n                ...RadioNode.defaultValue,\n                ...nodeData,\n                onChange: RadioNode.onChange\n            }\n            break;\n        case \"SelectNode\":\n            const SelectNode = new SelectClass();\n            newNode.data = {\n                ...newNode.data,\n                ...SelectNode.defaultValue,\n                ...nodeData,\n                onChange: SelectNode.onChange\n            }\n            break;\n        case \"DateTimeNode\":\n            const DateTimeNode = new DateTimeClass();\n            newNode.data = {\n                ...newNode.data,\n                ...DateTimeNode.defaultValue,\n                ...nodeData,\n                onChange: DateTimeNode.onChange\n            }\n            break;\n        case \"SignatureNode\":\n            const SignatureNode = new SignatureClass();\n            newNode.data = {\n                ...newNode.data,\n                ...SignatureNode.defaultValue,\n                ...nodeData,\n                onChange: SignatureNode.onChange\n            }\n            break;\n        case \"ImageNode\":\n            const ImageNode = new ImageClass();\n            newNode.data = {\n                ...newNode.data,\n                ...ImageNode.defaultValue,\n                ...nodeData,\n                onChange: ImageNode.onChange\n            }\n            break;\n        default:\n    }\n    return newNode;\n}\n\nexport { buildInputNode }","import React, { useCallback } from 'react'\nimport { Close, OpenWith } from '@mui/icons-material'\nimport { useNodes, useReactFlow } from 'reactflow';\n\nexport default function ActionController({ show, data, setInputField, nodeId }) {\n    const { setNodes } = useReactFlow();\n    const nodes = useNodes();\n\n    const onCancel = useCallback(() => {\n        setNodes(nodes.filter(i => i.id !== nodeId))\n    }, [nodeId, nodes, setNodes]);\n\n    return (\n        <div className={`component-btn-group action-controller ${!show ? \"visibility-hidden\" : \"\"}`}>\n            <div className=\"btn-secondary component-settings-button\" role=\"button\">\n                <OpenWith style={{ fontSize: \"14px\" }} />\n            </div>\n            <div className=\"btn-danger component-settings-button nodrag\" role=\"button\" onClick={onCancel}>\n                <Close style={{ fontSize: \"14px\" }} />\n            </div>\n        </div >\n    )\n}\n","import React, { memo } from 'react';\nimport { NodeResizer, useNodes, useReactFlow } from 'reactflow';\nimport { useHover } from 'react-use';\nimport ActionController from '../ActionController';\nimport { Button } from 'react-bootstrap';\nexport default memo((props) => {\n    const { setNodes, getNode } = useReactFlow();\n    const { id, selected, setInputField, rendered = false, output } = props;\n    const nodes = useNodes();\n    const node = getNode(id);\n    const { data: nodeData } = node;\n\n    const element = (hovered) => {\n        return (\n            <div className={`m-1 cstm-field-edit-border cstm-form-input-field ${hovered && !rendered ? \"hovered\" : \"\"}`}>\n                {!rendered && <ActionController show={true} nodeId={id} setNodes={setNodes} setInputField={setInputField} />}\n                {!rendered &&\n                    <NodeResizer\n                        color=\"#ff0071\"\n                        isVisible={selected}\n                        minWidth={100}\n                        minHeight={57} />}\n                <div className=\"form-inline p-1\">\n                    <Button className='w-100' variant={nodeData?.type[0]?.value || \"primary\"}>{nodeData.text}</Button>\n                </div>\n            </div>\n        )\n    };\n    const [hoverable, hovered] = useHover(element);\n\n    if (output && node.output?.hasOwnProperty(\"visibility\") && !node.output.visibility) return;\n\n    if (nodeData.conditional && rendered) {\n        const dependantValue = !!nodes?.length && nodeData?.conditional?.when && nodes?.find(nd => nd.id === nodeData.conditional.when)?.data?.value;\n        if ((nodeData.conditional.show === \"true\" && dependantValue !== nodeData?.conditional?.eq) ||\n            (nodeData.conditional.show === \"false\" && dependantValue === nodeData?.conditional?.eq)) {\n            return <div></div>\n        }\n    }\n\n    return (\n        <div className={`${hovered ? \"\" : \"\"}`}>\n            {hoverable}\n        </div>\n    );\n});","import React, { memo, useCallback, useEffect, useState } from 'react';\nimport { NodeResizer, useNodes, useReactFlow } from 'reactflow';\nimport { useHover } from 'react-use';\nimport ActionController from '../ActionController';\nimport { Form } from 'react-bootstrap';\n\nexport default memo((props) => {\n    const { setNodes, getNode } = useReactFlow();\n    const nodes = useNodes();\n    const { selected, setInputField, rendered = false, id, output } = props; // data\n    const [checked, setChecked] = useState([]);\n    const node = getNode(id);\n    const { data: nodeData } = node;\n\n    const onChangeValueNode = useCallback((checked) => {\n        if (!rendered) return;\n        setNodes(\n            nodes.map((node) => {\n                if (node.id === id)\n                    node.data = { ...node.data, value: checked };\n                return node;\n            })\n        );\n    }, [id, setNodes, nodes, rendered]);\n\n    useEffect(() => {\n        if (!rendered) return;\n        onChangeValueNode(checked);\n        //eslint-disable-next-line\n    }, [checked]);\n\n    const element = (hovered) => {\n        return (\n            <div className={`m-1 cstm-field-edit-border cstm-form-input-field ${hovered && !rendered ? \"hovered\" : \"\"}`}>\n                {!rendered && <ActionController show={true} nodeId={id} setNodes={setNodes} setInputField={setInputField} />}\n                {!rendered &&\n                    <NodeResizer\n                        color=\"#ff0071\"\n                        isVisible={selected}\n                        minWidth={100}\n                        minHeight={57} />}\n                <div className=\"form-inline p-1\">\n                    <div className=\"text-left\">\n                        <Form.Label>{nodeData?.label}</Form.Label>\n                        {nodeData?.options && !!nodeData.options.length ?\n                            nodeData?.options?.map((op, index) => (\n                                <Form.Check\n                                    type={\"checkbox\"}\n                                    inline\n                                    // {...nodeData}\n                                    key={op.value}\n                                    id={`${props.id}-${index}`}\n                                    name={id}\n                                    label={op.label}\n                                    className={`d-flex justify-content-start gap-10`}\n                                    // value={op.value}\n                                    checked={checked.includes(op.value)}\n                                    disabled={!!nodeData?.isEditable?.length && (nodeData?.isEditable[0]) === \"false\"}\n                                    // checked={Array.isArray(value) ? value?.includes(op.value) : value}\n                                    onChange={(e) => {\n                                        if (e.target.checked) setChecked(prev => [...prev, op.value])\n                                        else if (!e.target.checked) setChecked(prev => prev.filter(i => i !== op.value))\n                                    }}\n                                />\n                            )) :\n                            <Form.Text as={\"p\"} className=\"text-muted\">\n                                No options\n                            </Form.Text>\n                        }\n                        {/* {!!error && <Form.Text className={`text-danger ${customClasses.error}`}>{error.message}</Form.Text>} */}\n                    </div>\n                </div>\n            </div>\n        )\n    };\n    const [hoverable, hovered] = useHover(element);\n\n    if (output && node.output?.hasOwnProperty(\"visibility\") && !node.output.visibility) return;\n\n    if (nodeData.conditional && rendered) {\n        const dependantValue = !!nodes?.length && nodeData?.conditional?.when && nodes?.find(nd => nd.id === nodeData.conditional.when)?.data?.value;\n        if ((nodeData.conditional.show === \"true\" && dependantValue !== nodeData?.conditional?.eq) ||\n            (nodeData.conditional.show === \"false\" && dependantValue === nodeData?.conditional?.eq)) {\n            return <div></div>\n        }\n    }\n\n    return (\n        <div className={`${hovered ? \"\" : \"\"}`}>\n            {hoverable}\n        </div>\n    );\n});","import React, { memo, useCallback, useEffect, useState } from 'react';\nimport { NodeResizer, useNodes, useReactFlow } from 'reactflow';\nimport { useHover } from 'react-use';\nimport ActionController from '../ActionController';\nimport DatePicker from \"react-datepicker\";\nimport { Form } from 'react-bootstrap';\nimport moment from 'moment-timezone';\n\nexport default memo((props) => {\n    const { setNodes, getNode } = useReactFlow();\n    const nodes = useNodes();\n    const { id, selected, setInputField, rendered = false, output } = props;\n    const node = getNode(id);\n    const { data: nodeData } = node;\n    const [selectedDate, setSelectedDate] = useState(nodeData.value || \"\");\n\n    const onChangeValueNode = useCallback((selectedDate) => {\n        if (!rendered) return;\n        setNodes(\n            nodes.map((node) => {\n                if (node.id === id)\n                    node.data = { ...node.data, value: selectedDate ? moment(selectedDate).format() : \"\" };\n                return node;\n            })\n        );\n    }, [id, setNodes, nodes, rendered]);\n\n    useEffect(() => {\n        if (!rendered) return;\n        onChangeValueNode(selectedDate);\n        //eslint-disable-next-line\n    }, [selectedDate, rendered]);\n\n    const element = (hovered) => {\n        return (\n            <div className={`m-1 cstm-field-edit-border cstm-form-input-field ${hovered && !rendered ? \"hovered\" : \"\"}`}>\n                {!rendered && <ActionController show={true} nodeId={id} setNodes={setNodes} setInputField={setInputField} />}\n                {!rendered &&\n                    <NodeResizer\n                        color=\"#ff0071\"\n                        isVisible={selected}\n                        minWidth={100}\n                        minHeight={57} />}\n                <div className=\"form-inline\">\n                    <div className=\"input-group theme-border w-100 p-1\">\n                        {/* {data.isDateRange ? (\n\t\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\t\tclassName={`form-control`}\n\t\t\t\t\t\t\t\tplaceholderText={placeholder ? placeholder : label}\n\t\t\t\t\t\t\t\tselected={field.value && field.value[0]}\n\t\t\t\t\t\t\t\tselectsRange\n\t\t\t\t\t\t\t\tisClearable={config.isClearable}\n\t\t\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\t\t\tstartDate={field.value && field.value[0]}\n\t\t\t\t\t\t\t\tendDate={field.value && field.value[1]}\n\t\t\t\t\t\t\t\tdisabled={isEditable === false}\n\t\t\t\t\t\t\t\tonChange={(dates) => {\n\t\t\t\t\t\t\t\t\tif (isEditable === false) return;\n\t\t\t\t\t\t\t\t\tfield.onChange(dates.filter((d) => !!d));\n\t\t\t\t\t\t\t\t\tchangeHandler(dates);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : ( */}\n                        <Form.Label>{nodeData.label || \"\"}</Form.Label>\n                        <DatePicker\n                            className={`form-control w-100`}\n                            placeholderText={nodeData.placeholder}\n                            selected={selectedDate}\n                            disabled={nodeData.isEditable === false}\n                            onChange={(date) => {\n                                if (nodeData.isEditable === false)\n                                    return;\n                                // nodeData.onChange(date);\n                                setSelectedDate(date)\n                                // changeHandler(date);\n                            }}\n                            isClearable={!!nodeData?.isClearable?.length && nodeData?.isClearable[0] === \"true\"}\n                            showTimeSelect={!!nodeData?.showTime?.length && nodeData.showTime[0] === \"true\"}\n                            timeFormat=\"HH:mm\"\n                            autoComplete=\"off\"\n                            timeIntervals={15}\n                            dateFormat=\"MMMM d, yyyy h:mm aa\"\n                            timeCaption=\"time\"\n                        />\n                        {/* )} */}\n                    </div>\n                </div>\n            </div>\n        )\n    };\n    const [hoverable, hovered] = useHover(element);\n\n    if (output && node.output?.hasOwnProperty(\"visibility\") && !node.output.visibility) return;\n\n    if (nodeData.conditional && rendered) {\n        const dependantValue = !!nodes?.length && nodeData?.conditional?.when && nodes?.find(nd => nd.id === nodeData.conditional.when)?.data?.value;\n        if ((nodeData.conditional.show === \"true\" && dependantValue !== nodeData?.conditional?.eq) ||\n            (nodeData.conditional.show === \"false\" && dependantValue === nodeData?.conditional?.eq)) {\n            return <div></div>\n        }\n    }\n\n    return (\n        <div className={`${hovered ? \"\" : \"\"}`}>\n            {hoverable}\n        </div>\n    );\n});","import React, { memo, useCallback } from 'react';\nimport { NodeResizer, useNodes, useReactFlow } from 'reactflow';\nimport { useHover } from 'react-use';\nimport ActionController from '../ActionController';\nimport { getImageURL } from 'redux/common';\n\nexport default memo((props) => {\n    const { setNodes, getNode } = useReactFlow();\n    const nodes = useNodes();\n    const { selected, setInputField, rendered = false, id, output } = props;\n    const node = getNode(id);\n    const { data: nodeData } = node;\n    // const [imageMethod] = useState((nodeData?.method[0] && nodeData?.method[0].value) || \"static\");\n    // const [value, setValue] = useState(nodeData.value || \"\");\n    // const textValue = useDebounce(value, 500);\n\n    // const onChangeValueNode = useCallback((textValue) => {\n    //     if (!rendered) return;\n    //     setNodes(\n    //         nodes.map((node) => {\n    //             if (node.id === id) node.data = { ...node.data, value: textValue };\n    //             return node;\n    //         })\n    //     );\n    // }, [id, setNodes, nodes, rendered]);\n\n    // useEffect(() => {\n    //     if (!rendered) return;\n    //     onChangeValueNode(textValue);\n    //     // eslint-disable-next-line\n    // }, [textValue, rendered]);\n\n    const onResizeNode = useCallback((e, { height, width }) => {\n        setNodes(\n            nodes.map((node) => {\n                if (node.id === id) node.data = { ...node.data, style: { height, width } };\n                return node;\n            })\n        );\n    }, [id, nodes, setNodes]);\n\n    const element = (hovered) => {\n        return (\n            <div className={`cstm-field-edit-border cstm-form-input-field m-1 ${hovered && !rendered ? \"hovered\" : \"\"}`} style={nodeData.style}>\n                {!rendered && <ActionController show={true} nodeId={id} setNodes={setNodes} setInputField={setInputField} />}\n                {!rendered &&\n                    <NodeResizer\n                        color=\"#ff0071\"\n                        isVisible={selected}\n                        onResizeEnd={onResizeNode}\n                        minWidth={100}\n                        minHeight={57} />}\n                <div className='overflow-hidden'\n                    // style={{ height: nodeData.height, width: nodeData.width }}\n                    style={nodeData.style}\n                >\n                    {/* Sample text */}\n                    {/* {imageMethod === \"static\" && */}\n                    <img\n                        // `${nodeData.style.width}x${nodeData.style.height}`\n                        src={getImageURL(nodeData.imageURL)}\n                        // className=\"w-100\"\n                        style={nodeData.style}\n                        alt=\"\" />\n                    {/* } */}\n                </div>\n            </div>\n        )\n    };\n    const [hoverable, hovered] = useHover(element);\n\n    if (output && node.output?.hasOwnProperty(\"visibility\") && !node.output.visibility) return;\n\n    if (nodeData.conditional && rendered) {\n        const dependantValue = !!nodes?.length && nodeData?.conditional?.when &&\n            nodes?.find(nd => nd.id === nodeData.conditional.when)?.data?.value;\n        if ((nodeData.conditional.show === \"true\" && dependantValue !== nodeData?.conditional?.eq) ||\n            (nodeData.conditional.show === \"false\" && dependantValue === nodeData?.conditional?.eq)) {\n            return <div></div>\n        }\n    }\n\n    return (\n        <div className={`${hovered ? \"\" : \"\"}`}>\n            {hoverable}\n        </div>\n    );\n});","import React, { memo } from 'react';\nimport { NodeResizer, useNodes, useReactFlow } from 'reactflow';\nimport { useHover } from 'react-use';\nimport ActionController from '../ActionController';\n\nexport default memo((props) => {\n    const { setNodes, getNode } = useReactFlow();\n    const nodes = useNodes();\n    const { selected, setInputField, rendered = false, id, output } = props; // data\n    const node = getNode(id);\n    const { data: nodeData } = node;\n\n    const element = (hovered) => {\n        return (\n            <div className={`m-1 cstm-field-edit-border cstm-form-input-field ${(hovered && !rendered) ? \"hovered\" : \"\"}`}>\n                {!rendered &&\n                    <ActionController show={true} setNodes={setNodes} setInputField={setInputField} nodeId={id} />}\n                {!rendered &&\n                    <NodeResizer\n                        color=\"#ff0071\"\n                        isVisible={selected}\n                        minWidth={100}\n                        minHeight={57} />}\n                <div className=\"form-inline p-1\">\n                    <div className=\"input-group theme-border w-100\">\n                        <div dangerouslySetInnerHTML={{ __html: props.data.value || \"Unknown label\" }} />\n                    </div>\n                </div>\n            </div>\n        )\n    };\n    const [hoverable, hovered] = useHover(element);\n\n    if (output && node.output?.hasOwnProperty(\"visibility\") && !node.output.visibility) return;\n    if (!output && !!nodeData?.onlyOutput?.length) return;\n\n    if (nodeData.conditional && rendered) {\n        const dependantValue = !!nodes?.length && nodeData?.conditional?.when && nodes?.find(nd => nd.id === nodeData.conditional.when)?.data?.value;\n        if ((nodeData.conditional.show === \"true\" && dependantValue !== nodeData?.conditional?.eq) ||\n            (nodeData.conditional.show === \"false\" && dependantValue === nodeData?.conditional?.eq)) {\n            return <div></div>\n        }\n    }\n\n    return (\n        <div className={`${hovered ? \"\" : \"\"}`}>\n            {hoverable}\n        </div>\n    );\n});","import React, { memo } from 'react';\nimport { NodeResizer, useNodes, useReactFlow } from 'reactflow';\nimport { useHover } from 'react-use';\nimport ActionController from '../ActionController';\n\nexport default memo((props) => {\n    const { setNodes, getNode } = useReactFlow();\n    const nodes = useNodes();\n    const { id, selected, setInputField, rendered = false, output } = props;\n    const node = getNode(id);\n    const { data: nodeData } = node;\n\n    const element = (hovered) => {\n        return (\n            <div className={`m-1 cstm-field-edit-border cstm-form-input-field ${hovered && !rendered ? \"hovered\" : \"\"}`}>\n                {!rendered && <ActionController show={true} nodeId={id} setNodes={setNodes} setInputField={setInputField} />}\n                {!rendered &&\n                    <NodeResizer\n                        color=\"#ff0071\"\n                        isVisible={selected}\n                        minWidth={100}\n                        minHeight={57} />}\n                <div className=\"form-inline\">\n                    <div className=\"input-group theme-border w-100\">\n                        <input\n                            type=\"number\"\n                            className=\"form-control search\"\n                            title={nodeData.label}\n                            onChange={e => nodeData.onChange(e.target.value)}\n                            placeholder={nodeData.label}\n                        />\n                    </div>\n                </div>\n            </div>\n        )\n    };\n    const [hoverable, hovered] = useHover(element);\n\n    if (output && node.output?.hasOwnProperty(\"visibility\") && !node.output.visibility) return;\n\n    if (nodeData.conditional && rendered) {\n        const dependantValue = !!nodes?.length && nodeData?.conditional?.when && nodes?.find(nd => nd.id === nodeData.conditional.when)?.data?.value;\n        if ((nodeData.conditional.show === \"true\" && dependantValue !== nodeData?.conditional?.eq) ||\n            (nodeData.conditional.show === \"false\" && dependantValue === nodeData?.conditional?.eq)) {\n            return <div></div>\n        }\n    }\n    return (\n        <div className={`${hovered ? \"\" : \"\"}`}>\n            {hoverable}\n        </div>\n    );\n});","import React, { memo } from 'react';\nimport { NodeResizer, useNodes, useReactFlow } from 'reactflow';\nimport { useHover } from 'react-use';\nimport ActionController from '../ActionController';\n\nexport default memo((props) => {\n    const { setNodes, getNode } = useReactFlow();\n    const nodes = useNodes();\n    const { id, selected, setInputField, rendered = false, output } = props;\n    const node = getNode(id);\n    const { data: nodeData } = node;\n\n    const element = (hovered) => {\n        return (\n            <div className={`m-1 cstm-field-edit-border cstm-form-input-field ${hovered && !rendered ? \"hovered\" : \"\"}`}>\n                {!rendered && <ActionController show={true} nodeId={id} setNodes={setNodes} setInputField={setInputField} />}\n                {!rendered &&\n                    <NodeResizer\n                        color=\"#ff0071\"\n                        isVisible={selected}\n                        minWidth={100}\n                        minHeight={57} />}\n                <div className=\"form-inline p-1\">\n                    <div className=\"input-group theme-border w-100\">\n                        <input\n                            type=\"password\"\n                            className=\"form-control search\"\n                            title={nodeData.label}\n                            onChange={e => nodeData.onChange(e.target.value)}\n                            placeholder={nodeData.label}\n                        />\n                    </div>\n                </div>\n            </div>\n        )\n    };\n    const [hoverable, hovered] = useHover(element);\n\n    if (output && node.output?.hasOwnProperty(\"visibility\") && !node.output.visibility) return;\n\n    if (nodeData.conditional && rendered) {\n        const dependantValue = !!nodes?.length && nodeData?.conditional?.when && nodes?.find(nd => nd.id === nodeData.conditional.when)?.data?.value;\n        if ((nodeData.conditional.show === \"true\" && dependantValue !== nodeData?.conditional?.eq) ||\n            (nodeData.conditional.show === \"false\" && dependantValue === nodeData?.conditional?.eq)) {\n            return <div></div>\n        }\n    }\n\n    return (\n        <div className={`${hovered ? \"\" : \"\"}`}>\n            {hoverable}\n        </div>\n    );\n});","import React, { memo, useCallback, useEffect, useState } from 'react';\nimport { NodeResizer, useNodes, useReactFlow } from 'reactflow';\nimport { useHover } from 'react-use';\nimport ActionController from '../ActionController';\nimport { Form } from 'react-bootstrap';\n\nexport default memo((props) => {\n    const { setNodes, getNode } = useReactFlow();\n    const nodes = useNodes();\n    const { selected, setInputField, rendered = false, id, output } = props; // data\n    const node = getNode(id);\n    const { data: nodeData } = node;\n    const [checked, setChecked] = useState(nodeData.value || \"\");\n\n    const onChangeValueNode = useCallback(([checked]) => {\n        if (!rendered) return;\n        setNodes(\n            nodes.map((node) => {\n                if (node.id === id)\n                    node.data = { ...node.data, value: checked, };\n                return node;\n            })\n        );\n    }, [id, setNodes, nodes, rendered]);\n\n    useEffect(() => {\n        if (!rendered) return;\n        onChangeValueNode(checked);\n        //eslint-disable-next-line\n    }, [checked, rendered]);\n\n    const element = (hovered) => {\n        return (\n            <div className={`m-1 cstm-field-edit-border cstm-form-input-field ${hovered && !rendered ? \"hovered\" : \"\"}`}>\n                {!rendered && <ActionController show={true} nodeId={id} setNodes={setNodes} setInputField={setInputField} />}\n                {!rendered &&\n                    <NodeResizer\n                        color=\"#ff0071\"\n                        isVisible={selected}\n                        minWidth={100}\n                        minHeight={57} />}\n                <div className=\"form-inline p-1\">\n                    <div className=\"text-left\">\n                        {nodeData.label && <Form.Label>{nodeData.label}</Form.Label>}\n                        {nodeData?.options?.map((op, index) => (\n                            <Form.Check\n                                type='radio'\n                                inline\n                                key={op.value}\n                                id={`${props.id}-${index}`}\n                                name={id}\n                                label={op.label}\n                                className={`d-flex justify-content-start gap-10`}\n                                checked={checked.includes(op.value)}\n                                disabled={!!nodeData?.isEditable?.length && (nodeData?.isEditable[0]) === \"false\"}\n                                onChange={(e) => {\n                                    if (e.target.checked) setChecked(prev => [op.value])\n                                    // else if (!e.target.checked) setChecked(prev => prev.filter(i => i !== op.value))\n                                }}\n                            />\n                        ))}\n                        {/* {!!error && <Form.Text className={`text-danger ${customClasses.error}`}>{error.message}</Form.Text>} */}\n                        {nodeData?.description &&\n                            <Form.Text>{nodeData.description}</Form.Text>}\n                    </div>\n                </div>\n            </div>\n        )\n    };\n    const [hoverable, hovered] = useHover(element);\n\n    if (output && node.output?.hasOwnProperty(\"visibility\") && !node.output.visibility) return;\n\n    if (nodeData.conditional && rendered) {\n        const dependantValue = !!nodes?.length && nodeData?.conditional?.when && nodes?.find(nd => nd.id === nodeData.conditional.when)?.data?.value;\n        if ((nodeData.conditional.show === \"true\" && dependantValue !== nodeData?.conditional?.eq) ||\n            (nodeData.conditional.show === \"false\" && dependantValue === nodeData?.conditional?.eq)) {\n            return <div></div>\n        }\n    }\n\n    return (\n        <div className={`${hovered ? \"\" : \"\"}`}>\n            {hoverable}\n        </div>\n    );\n});","import React, { memo, useCallback, useEffect, useState } from 'react';\nimport { NodeResizer, useNodes, useReactFlow } from 'reactflow';\nimport { useHover } from 'react-use';\nimport ActionController from '../ActionController';\nimport ReactSelect from 'react-select';\nimport { Form } from 'react-bootstrap';\nexport default memo((props) => {\n    const { setNodes, getNode } = useReactFlow();\n    const nodes = useNodes();\n    const { selected, setInputField, id, rendered = false, output } = props; // data\n    const node = getNode(id);\n    const { data: nodeData } = node;\n    const [value, setValue] = useState(nodeData.value || []);\n\n    const onChangeValueNode = useCallback((textValue) => {\n        if (!rendered) return;\n        setNodes(\n            nodes.map((node) => {\n                if (node.id === id) {\n                    node.data = { ...node.data, value: textValue, };\n                }\n                return node;\n            })\n        );\n    }, [id, setNodes, nodes, rendered]);\n\n    useEffect(() => {\n        if (!rendered) return;\n        onChangeValueNode(value);\n        //eslint-disable-next-line\n    }, [value, rendered]);\n\n    const element = (hovered) => {\n        return (\n            <div className={`m-1 cstm-field-edit-border cstm-form-input-field ${hovered && !rendered ? \"hovered\" : \"\"}`}>\n                {!rendered && <ActionController show={true} nodeId={id} setNodes={setNodes} setInputField={setInputField} />}\n                {!rendered &&\n                    <NodeResizer\n                        color=\"#ff0071\"\n                        isVisible={selected}\n                        minWidth={185}\n                        minHeight={57} />}\n                <div className=\"form-inline\">\n                    <div className=\"input-group theme-border w-100 p-1\">\n                        <Form.Label>{nodeData?.label}</Form.Label>\n                        <ReactSelect\n                            value={[value]}\n                            classNamePrefix=\"select\"\n                            placeholder=\"Select Options\"\n                            className={\"min-width-160 w-100\"}\n                            name={nodeData.name}\n                            options={nodeData?.options || []}\n                            onChange={(item) => setValue(item)}\n                            isClearable={true}\n                        />\n                        {nodeData?.description &&\n                            <Form.Text>{nodeData?.description}</Form.Text>}\n                    </div>\n                </div>\n            </div>\n        )\n    };\n    const [hoverable, hovered] = useHover(element);\n\n    if (output && node.output?.hasOwnProperty(\"visibility\") && !node.output.visibility) return;\n\n    if (nodeData.conditional && rendered) {\n        const dependantValue = !!nodes?.length && nodeData?.conditional?.when && nodes?.find(nd => nd.id === nodeData.conditional.when)?.data?.value;\n        if ((nodeData.conditional.show === \"true\" && dependantValue !== nodeData?.conditional?.eq) ||\n            (nodeData.conditional.show === \"false\" && dependantValue === nodeData?.conditional?.eq)) {\n            return <div></div>\n        }\n    }\n\n    return (\n        <div className={`${hovered ? \"\" : \"\"}`}>\n            {hoverable}\n        </div>\n    );\n});","import React, { memo, useCallback, useEffect, useRef, useState } from 'react';\nimport { NodeResizer, useNodes, useReactFlow } from 'reactflow';\nimport { useHover } from 'react-use';\nimport ActionController from '../ActionController';\nimport SignatureCanvas from 'react-signature-canvas';\nimport { Form } from 'react-bootstrap';\nimport { MuiActionButton } from 'Components/MuiDataGrid';\nimport { Replay } from '@mui/icons-material';\n\nexport default memo((props) => {\n    const { setNodes, getNode } = useReactFlow();\n    const nodes = useNodes();\n    const { selected, setInputField, id, rendered = false, output } = props; // data,\n\n    const sigRef = useRef();\n    const node = getNode(id);\n    const { data: nodeData } = node;\n    const [signature, setSignature] = useState(nodeData.value || null);\n    const handleSignatureEnd = useCallback(() => {\n        setSignature(sigRef.current.toDataURL());\n    }, []);\n\n    const onChangeValueNode = useCallback((textValue) => {\n        if (!rendered) return;\n        setNodes(\n            nodes.map((node) => {\n                if (node.id === id)\n                    node.data = { ...node.data, value: textValue, };\n                return node;\n            })\n        );\n    }, [id, setNodes, nodes, rendered]);\n\n    const onClear = useCallback(() => {\n        sigRef.current.clear();\n        setSignature(null);\n    }, []);\n\n    useEffect(() => {\n        if (!rendered) return;\n        onChangeValueNode(signature);\n        //eslint-disable-next-line\n    }, [signature, rendered]);\n\n    const element = (hovered) => {\n        return (\n            <div className={`m-1 cstm-field-edit-border cstm-form-input-field ${hovered && !rendered ? \"hovered\" : \"\"}`}>\n                {!rendered && <ActionController show={true} nodeId={id} setNodes={setNodes} setInputField={setInputField} />}\n                {!rendered &&\n                    <NodeResizer\n                        color=\"#ff0071\"\n                        isVisible={selected}\n                        minWidth={100}\n                        minHeight={57} />}\n                <div className=\"form-inline p-2\">\n                    <Form.Label>{nodeData.label || \"\"}</Form.Label>\n                    <div className={`input-group theme-border w-100 signature-wrapper position-relative`}>\n                        {rendered ?\n                            <div className='signature' >\n                                <SignatureCanvas\n                                    penColor=\"green\"\n                                    ref={sigRef}\n                                    canvasProps={{ className: 'bg-light-color' }}\n                                    onEnd={handleSignatureEnd}\n                                />\n                            </div> :\n                            <div className='bg-light-color' style={{ height: \"140px\", width: \"100%\", minWidth: \"300px\" }}>\n                            </div>}\n                        <div className='position-absolute' style={{ right: 0, bottom: \"100%\" }}>\n                            <MuiActionButton Icon={Replay} size=\"medium\" onClick={onClear} />\n                        </div>\n                    </div>\n                    <Form.Text>{nodeData.description || \"\"}</Form.Text>\n                </div>\n            </div>\n        )\n    };\n    const [hoverable, hovered] = useHover(element);\n\n    if (output && node.output?.hasOwnProperty(\"visibility\") && !node.output.visibility) return;\n\n    if (nodeData.conditional && rendered) {\n        const dependantValue = !!nodes?.length && nodeData?.conditional?.when && nodes?.find(nd => nd.id === nodeData.conditional.when)?.data?.value;\n        if ((nodeData.conditional.show === \"true\" && dependantValue !== nodeData?.conditional?.eq) ||\n            (nodeData.conditional.show === \"false\" && dependantValue === nodeData?.conditional?.eq)) {\n            return <div></div>\n        }\n    }\n\n    return (\n        <div className={`${hovered ? \"\" : \"\"}`}>\n            {hoverable}\n        </div>\n    );\n});","import React, { memo, useCallback, useEffect, useState } from 'react';\nimport { NodeResizer, useNodes, useReactFlow } from 'reactflow';\nimport { useHover } from 'react-use';\nimport ActionController from '../ActionController';\nimport { Form, InputGroup } from 'react-bootstrap';\nimport useDebounce from 'services/hooks/useDebounce';\nimport { calculateByExpression } from 'Routes/FormBuilder/FormTemplate/Renderer/FormRenderer';\nimport { isStringNumeric } from 'services/helper';\nimport { MuiActionButton } from 'Components/MuiDataGrid';\nimport { Calculate } from '@mui/icons-material';\nimport { showError } from 'utils/package_config/toast';\n\nexport default memo((props) => {\n    const { setNodes, getNode } = useReactFlow();\n    const nodes = useNodes();\n    const { selected, setInputField, customClasses = {}, rendered = false, id, output } = props;\n    const node = getNode(id);\n    const { data: nodeData } = node;\n    const [value, setValue] = useState(nodeData.value || \"\");\n    const textValue = useDebounce(value, 500);\n\n    const onChangeValueNode = useCallback((textValue) => {\n        if (!rendered) return;\n        setNodes(\n            nodes.map((node) => {\n                if (node.id === id)\n                    node.data = { ...node.data, value: textValue, };\n                return node;\n            })\n        );\n    }, [id, setNodes, nodes, rendered]);\n\n    useEffect(() => {\n        if (!rendered) return;\n        onChangeValueNode(textValue);\n        //eslint-disable-next-line\n    }, [textValue, rendered]);\n\n    const getCalculatedValue = useCallback(() => {\n        const expression = nodeData.calculated;\n        try {\n            let { value, isNull } = calculateByExpression({ expression, nodes });\n            if (value && !isNull) {\n                if (isStringNumeric(value)) value = `${Number(value).toFixed(2)}`\n                setValue(value);\n            }\n        } catch (error) {\n            showError(`There is an error occured while calculating the value. Check the given expression: ${expression}`)\n            console.error(error);\n        }\n    }, [nodes, nodeData]);\n\n    const element = (hovered) => {\n        return (\n            <div className={`m-1 cstm-field-edit-border cstm-form-input-field ${hovered && !rendered ? \"hovered\" : \"\"}`}>\n                {!rendered && <ActionController show={true} nodeId={id} setNodes={setNodes} setInputField={setInputField} />}\n                {!rendered &&\n                    <NodeResizer\n                        color=\"#ff0071\"\n                        isVisible={selected}\n                        minWidth={100}\n                        minHeight={57} />}\n                <div className=\"form-inline\">\n                    <div className='text-left w-100 p-1'>\n                        {nodeData?.label !== \"\" && (\n                            <Form.Label className={`${customClasses.label} d-flex justify-content-start mb-1`}>\n                                {nodeData?.label}\n                                {nodeData?.isRequired && <span className=\"small text-danger\">*</span>}\n                            </Form.Label>\n                        )}\n                        <InputGroup className=\"mb-0 d-flex\">\n                            {nodeData?.prefix && <InputGroup.Text id={`${nodeData.id}-prefix`}>{nodeData.prefix}</InputGroup.Text>}\n                            <Form.Control\n                                value={value || \"\"}\n                                as={\"textarea\"}\n                                placeholder={nodeData.placeholder ? nodeData.placeholder : nodeData.label}\n                                className={`form-control`}\n                                disabled={!!nodeData?.isEditable?.length && (nodeData?.isEditable[0]) === \"false\"}\n                                autoComplete={nodeData?.autoComplete ? nodeData?.autoComplete : undefined}\n                                autoFocus={!!nodeData?.autoFocus?.length && Boolean(nodeData?.autoFocus[0])}\n                                defaultValue={nodeData?.defaultValue ? nodeData?.defaultValue : undefined}\n                                onChange={(e) => {\n                                    if (nodeData?.isEditable === false) return;\n                                    else setValue(e.target.value);\n                                }}\n                            />\n                            {nodeData?.suffix && <InputGroup.Text id={`${id}-suffix`}>{nodeData.suffix}</InputGroup.Text>}\n                            {nodeData.calculated && rendered &&\n                                <MuiActionButton Icon={Calculate} onClick={getCalculatedValue} tooltip=\"Calculate value\" />\n                            }\n                        </InputGroup>\n\n                        {nodeData?.description &&\n                            <Form.Text id={`${id}-description`}>\n                                {nodeData?.description}\n                            </Form.Text>}\n                        {nodeData?.error &&\n                            <Form.Text id={`${id}-error`}>\n                                {nodeData?.error}\n                            </Form.Text>}\n                    </div>\n                </div>\n            </div>\n        )\n    };\n    const [hoverable, hovered] = useHover(element);\n\n    if (output && node.output?.hasOwnProperty(\"visibility\") && !node.output.visibility) return;\n\n    if (nodeData.conditional && rendered) {\n        const dependantValue = !!nodes?.length && nodeData?.conditional?.when && nodes?.find(nd => nd.id === nodeData.conditional.when)?.data?.value;\n        if ((nodeData.conditional.show === \"true\" && dependantValue !== nodeData?.conditional?.eq) ||\n            (nodeData.conditional.show === \"false\" && dependantValue === nodeData?.conditional?.eq)) {\n            return <div></div>\n        }\n    }\n\n    return (\n        <div className={`${hovered ? \"\" : \"\"}`}>\n            {hoverable}\n        </div>\n    );\n});\n\n// export default memo(({ data, isConnectable }) => {\n//     return (<>\n//         <div>\n//             Custom Color Picker Node: <strong>{data.color}</strong>\n//         </div>\n//         <input className=\"nodrag\" type=\"color\" onChange={data.onChange} defaultValue={data.color} />\n//     </>);\n// });","import React, { memo, useCallback, useEffect, useState } from 'react';\nimport { NodeResizer, useNodes, useReactFlow } from 'reactflow';\nimport { useHover } from 'react-use';\nimport ActionController from '../ActionController';\nimport { Form, InputGroup } from 'react-bootstrap';\nimport useDebounce from 'services/hooks/useDebounce';\nimport { MuiActionButton } from 'Components/MuiDataGrid';\nimport { Calculate } from '@mui/icons-material';\nimport { isStringNumeric } from 'services/helper';\nimport { calculateByExpression } from 'Routes/FormBuilder/FormTemplate/Renderer/FormRenderer';\nimport { showError } from 'utils/package_config/toast';\n\nexport default memo((props) => {\n    const { setNodes, getNode } = useReactFlow();\n    const nodes = useNodes();\n    const { selected, setInputField, customClasses = {}, rendered = false, id, output } = props;\n    const node = getNode(id);\n    const { data: nodeData } = node;\n    const [value, setValue] = useState(nodeData.value || \"\");\n    const textValue = useDebounce(value, 500);\n\n    const onChangeValueNode = useCallback((textValue) => {\n        if (!rendered) return;\n        setNodes(\n            nodes.map((node) => {\n                if (node.id === id) node.data = { ...node.data, value: textValue, };\n                return node;\n            })\n        );\n    }, [id, setNodes, nodes, rendered]);\n\n    useEffect(() => {\n        if (!rendered) return;\n        onChangeValueNode(textValue);\n        //eslint-disable-next-line\n    }, [textValue, rendered]);\n\n    const getCalculatedValue = useCallback(() => {\n        const expression = nodeData.calculated;\n        try {\n            let { value, isNull } = calculateByExpression({ expression, nodes });\n            if (value && !isNull) {\n                if (isStringNumeric(value)) value = `${Number(value).toFixed(2)}`\n                setValue(value);\n            }\n        } catch (error) {\n            showError(`There is an error occured while calculating the value. Check the given expression: ${expression}`)\n            console.error(error);\n        }\n    }, [nodes, nodeData]);\n\n    const element = (hovered) => {\n        return (\n            <div className={`m-1 cstm-field-edit-border cstm-form-input-field ${hovered && !rendered ? \"hovered\" : \"\"}`}>\n                {!rendered && <ActionController show={true} nodeId={id} setNodes={setNodes} setInputField={setInputField} />}\n                {!rendered &&\n                    <NodeResizer\n                        color=\"#ff0071\"\n                        isVisible={selected}\n                        minWidth={100}\n                        minHeight={57} />}\n                <div className=\"form-inline p-1\">\n                    <div className='text-left w-100'>\n                        {nodeData?.label !== \"\" && !output && (\n                            <Form.Label className={`${customClasses.label} d-flex justify-content-start mb-1`}>\n                                {nodeData?.label}\n                                {nodeData?.isRequired && <span className=\"small text-danger\">*</span>}\n                            </Form.Label>\n                        )}\n                        <InputGroup className=\"mb-0 d-flex\">\n                            {nodeData?.prefix && <InputGroup.Text id={`${nodeData.id}-prefix`}>{nodeData.prefix}</InputGroup.Text>}\n                            <Form.Control\n                                value={value || \"\"}\n                                type={\"text\"}\n                                placeholder={nodeData.placeholder ? nodeData.placeholder : nodeData.label}\n                                className={`form-control`}\n                                disabled={!!nodeData?.isEditable?.length && (nodeData?.isEditable[0]) === \"false\"}\n                                autoComplete={nodeData?.autoComplete ? nodeData?.autoComplete : undefined}\n                                autoFocus={!!nodeData?.autoFocus?.length && Boolean(nodeData?.autoFocus[0])}\n                                defaultValue={nodeData?.defaultValue ? nodeData?.defaultValue : undefined}\n                                // onBlur={() => { onChangeValueNode(textValue) }}\n                                onChange={(e) => {\n                                    if (nodeData?.isEditable === false) return;\n                                    if (nodeData?.inputType === \"number\") {\n                                        nodeData?.onChange(Number(e.target.value));\n                                    } else {\n                                        setValue(e.target.value);\n                                    }\n                                }}\n                            />\n                            {nodeData?.suffix && <InputGroup.Text id={`${nodeData.id}-suffix`}>{nodeData.suffix}</InputGroup.Text>}\n                            {nodeData.calculated && rendered &&\n                                <MuiActionButton Icon={Calculate} onClick={getCalculatedValue} tooltip=\"Calculate value\" />\n                            }\n                        </InputGroup>\n\n                        {nodeData?.description &&\n                            <Form.Text id={`${props?.id}-description`}>\n                                {nodeData?.description}\n                            </Form.Text>}\n                        {nodeData?.error &&\n                            <Form.Text id={`${props?.id}-error`}>\n                                {nodeData?.error}\n                            </Form.Text>}\n                    </div>\n                </div>\n            </div>\n        )\n    };\n    const [hoverable, hovered] = useHover(element);\n\n    if (output && node.output?.hasOwnProperty(\"visibility\") && !node.output.visibility) return;\n\n    if (nodeData.conditional && rendered) {\n        const dependantValue = !!nodes?.length && nodeData?.conditional?.when && nodes?.find(nd => nd.id === nodeData.conditional.when)?.data?.value;\n        if ((nodeData.conditional.show === \"true\" && dependantValue !== nodeData?.conditional?.eq) ||\n            (nodeData.conditional.show === \"false\" && dependantValue === nodeData?.conditional?.eq)) {\n            return <div></div>\n        }\n    }\n\n    return (\n        <div className={`${hovered ? \"\" : \"\"}`}>\n            {hoverable}\n        </div>\n    );\n});","import React, { useEffect, useMemo, useRef } from 'react'\nimport { ReactFlow, ReactFlowProvider, useNodesState } from 'reactflow'\nimport { isStringNumeric } from 'services/helper';\nimport useDebounce from 'services/hooks/useDebounce';\nimport ButtonNode from '../Builder/custom-components/inputs/ButtonNode';\nimport CheckBoxNode from '../Builder/custom-components/inputs/CheckBoxNode';\nimport DateTimeNode from '../Builder/custom-components/inputs/DateTimeNode';\nimport ImageNode from '../Builder/custom-components/inputs/ImageNode';\nimport LabelNode from '../Builder/custom-components/inputs/LabelNode';\nimport NumberNode from '../Builder/custom-components/inputs/NumberNode';\nimport PasswordNode from '../Builder/custom-components/inputs/PasswordNode';\nimport RadioNode from '../Builder/custom-components/inputs/RadioNode';\nimport SelectNode from '../Builder/custom-components/inputs/SelectNode';\nimport SignatureNode from '../Builder/custom-components/inputs/SignatureNode';\nimport TextAreaNode from '../Builder/custom-components/inputs/TextAreaNode';\nimport TextField from '../Builder/custom-components/inputs/TextField';\nimport { buildInputNode } from '../Builder/Services/NodeBuilder';\n\nexport default function FormRenderer({ onChange = () => { }, form, height }) {\n    const reactFlowWrapper = useRef(null);\n    const initialNodes = JSON.parse(localStorage.getItem('formNodes')) || [];\n    const [nodes, setNodes, onNodesChange] = useNodesState(form.components || initialNodes);\n    const bouncedNodes = useDebounce(nodes, 500);\n\n    useEffect(() => {\n        if (!!bouncedNodes?.length)\n            // localStorage.setItem(\"formNodes\", JSON.stringify(bouncedNodes));\n            localStorage.setItem(\"formNodes\", JSON.stringify([]));\n        onChange({ components: bouncedNodes })\n    }, [bouncedNodes, onChange]);\n\n    useEffect(() => {\n        const formNodes = form.components && form.components.map((node) => {\n            return buildInputNode({ id: node.id, type: node.type, position: node.position, nodeData: node.data })\n        });\n        setNodes(formNodes || initialNodes);\n        //eslint-disable-next-line\n    }, [setNodes]);\n\n    const nodeTypes = useMemo(() => {\n        return {\n            LabelNode: props => <LabelNode {...props} rendered />,\n            TextFieldNode: props => <TextField {...props} rendered />,\n            TextAreaNode: props => <TextAreaNode {...props} rendered />,\n            NumberNode: props => <NumberNode {...props} rendered />,\n            ButtonNode: props => <ButtonNode {...props} rendered />,\n            PasswordNode: props => <PasswordNode {...props} rendered />,\n            SelectNode: props => <SelectNode {...props} rendered />,\n            RadioNode: props => <RadioNode {...props} rendered />,\n            CheckBoxNode: props => <CheckBoxNode {...props} rendered />,\n            DateTimeNode: props => <DateTimeNode {...props} rendered />,\n            ImageNode: props => <ImageNode {...props} rendered />,\n            SignatureNode: props => <SignatureNode {...props} rendered />,\n        }\n    }, []);\n\n    const { pageHeight = 0 } = useMemo(() => {\n        let maxCoordinates = { pageHeight: 2000 }\n        if (!!bouncedNodes?.length) {\n            const ymin = Math.min(...bouncedNodes.map(i => i.position?.y)) || 2000;\n            const ymax = Math.max(...bouncedNodes.map(i => i.position?.y)) || 2000;\n            maxCoordinates = { pageHeight: Number((ymax - ymin).toFixed(0)) + 1000 }\n        }\n        return maxCoordinates;\n    }, [bouncedNodes]);\n\n    return (\n        <div className=\"hcmd-form-builder form-renderer\">\n            <div className=\"form-canvas w-100\" style={{ height: height ?? \"85vh\", maxWidth: 1200 }}>\n                <ReactFlowProvider>\n                    <div className=\"reactflow-wrapper h-100 bg-light\" ref={reactFlowWrapper}>\n                        <ReactFlow\n                            nodes={nodes}\n                            onNodesChange={onNodesChange}\n                            style={{ background: '#fff' }}\n                            nodeTypes={nodeTypes}\n                            defaultViewport={{ x: 0, y: 0, zoom: 1 }}\n                            // ---------- For Render Only -----------\n                            nodesDraggable={false}\n                            nodesFocusable={true}\n                            draggable={false}\n                            zoomOnScroll={false}\n                            zoomOnPinch={false}\n                            zoomOnDoubleClick={false}\n                            panOnDrag={false}\n                            panOnScroll={true}\n                            proOptions={{ hideAttribution: true }}\n                            // panOnScrollMode={\"free\"}\n                            translateExtent={[[0, 0], [1200, pageHeight]]}\n                        // zoomOnScroll={false}\n                        // draggable={true}\n                        // elementsSelectable={false}\n                        // selectNodesOnDrag\n                        // onSelect={e => console.log('e', e)}\n                        // onSelectionChange={({ nodes }) => setSelectedNode(!!nodes.length ? nodes[0] : null)}\n                        // nodesDraggable={false}\n                        // edges={edges}\n                        // onEdgesChange={onEdgesChange}\n                        // onConnect={onConnect}\n                        // snapToGrid={true}\n                        // snapGrid={snapGrid}\n                        >\n                            {/* <Controls\n                                showZoom={false}\n                                showFitView={false}\n                            /> */}\n                        </ReactFlow>\n                    </div>\n                </ReactFlowProvider>\n            </div >\n        </div >\n    )\n}\n\nexport const calculateByExpression = ({ expression, nodes }) => {\n    const variableNames = [...new Set(expression.match(/[a-zA-Z_]+/g))];\n    let modifiedExp = expression, isAnyNull = false;\n    if (!variableNames?.length) return;\n    let fieldNameValues =\n        variableNames.map((field) => {\n            if (!field) return ({ name: field, value: \"\" });\n            const findNodeData = nodes.find(nd => nd.data.name === field)?.data;\n            if (!findNodeData || !findNodeData.value) return ({ name: field, value: \"\" });\n            return ({ name: field, value: findNodeData.value });\n        });\n\n    for (const iterator of variableNames) {\n        let findVal = fieldNameValues.find(j => j.name === iterator).value || \"\";\n        findVal = findVal.trim();\n        modifiedExp = modifiedExp.replaceAll(iterator, isStringNumeric(findVal) ? `${Number(findVal) || 0}` : `'${String(findVal) || \"\"}'`);\n        if (!findVal) isAnyNull = true;\n    }\n    if (!isAnyNull) {\n        let value = `${eval(modifiedExp)}` || \"\"; //eslint-disable-line\n        if (isStringNumeric(value)) value = `${Number(value).toFixed(0)}`\n        return { value, isNull: isAnyNull }\n    }\n    return { isNull: isAnyNull }\n}"],"names":["constructor","defaultValue","text","name","type","onChange","data","id","label","value","options","description","placeholder","rows","prefix","suffix","autoComplete","autoFocus","isEditable","tooltip","isClearable","timeRequired","method","imageURL","style","height","width","buildInputNode","_ref","position","nodeData","output","newNode","concat","Date","now","LabelNode","LabelClass","TextField","TextFieldClass","TextArea","TextAreaClass","InputNumber","NumberClass","inputButton","ButtonClass","PasswordNode","PasswordClass","CheckBoxNode","CheckBoxClass","RadioNode","RadioClass","SelectNode","SelectClass","DateTimeNode","DateTimeClass","SignatureNode","SignatureClass","ImageNode","ImageClass","ActionController","show","setInputField","nodeId","setNodes","useReactFlow","nodes","useNodes","onCancel","useCallback","filter","i","_jsxs","className","children","_jsx","role","OpenWith","fontSize","onClick","Close","memo","props","_node$output","getNode","selected","rendered","node","hoverable","hovered","useHover","_nodeData$type$","NodeResizer","color","isVisible","minWidth","minHeight","Button","variant","hasOwnProperty","visibility","conditional","_nodeData$conditional","_nodes$find","_nodes$find$data","_nodeData$conditional2","_nodeData$conditional3","dependantValue","length","when","find","nd","eq","checked","setChecked","useState","onChangeValueNode","map","useEffect","_nodeData$options","Form","Label","op","index","_nodeData$isEditable","Check","inline","includes","disabled","e","target","prev","Text","as","selectedDate","setSelectedDate","moment","format","_nodeData$isClearable","_nodeData$showTime","DatePicker","placeholderText","date","showTimeSelect","showTime","timeFormat","timeIntervals","dateFormat","timeCaption","onResizeNode","onResizeEnd","src","getImageURL","alt","_nodeData$onlyOutput","dangerouslySetInnerHTML","__html","onlyOutput","title","setValue","textValue","ReactSelect","classNamePrefix","item","sigRef","useRef","signature","setSignature","handleSignatureEnd","current","toDataURL","onClear","clear","SignatureCanvas","penColor","ref","canvasProps","onEnd","right","bottom","MuiActionButton","Icon","Replay","size","customClasses","useDebounce","getCalculatedValue","expression","calculated","isNull","calculateByExpression","isStringNumeric","Number","toFixed","error","showError","console","_nodeData$autoFocus","isRequired","InputGroup","Control","undefined","Boolean","Calculate","inputType","FormRenderer","form","reactFlowWrapper","initialNodes","JSON","parse","localStorage","getItem","onNodesChange","useNodesState","components","bouncedNodes","setItem","stringify","formNodes","nodeTypes","useMemo","TextFieldNode","TextAreaNode","NumberNode","ButtonNode","pageHeight","maxCoordinates","ymin","Math","min","_i$position","y","ymax","max","_i$position2","maxWidth","ReactFlowProvider","ReactFlow","background","defaultViewport","x","zoom","nodesDraggable","nodesFocusable","draggable","zoomOnScroll","zoomOnPinch","zoomOnDoubleClick","panOnDrag","panOnScroll","proOptions","hideAttribution","translateExtent","_ref2","variableNames","Set","match","modifiedExp","isAnyNull","fieldNameValues","field","findNodeData","iterator","findVal","j","trim","replaceAll","String","eval"],"sourceRoot":""}