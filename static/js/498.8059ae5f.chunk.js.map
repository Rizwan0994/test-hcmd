{"version":3,"file":"static/js/498.8059ae5f.chunk.js","mappings":"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","sources":["Routes/Chat/Main/UserChat/PopupMedia.jsx"],"sourcesContent":["import React, { lazy, useState } from 'react'\nimport { CONST } from 'utils/constants';\nimport { ZoomIn, ZoomOut } from 'react-bootstrap-icons';\nimport { isMobile } from 'react-device-detect';\nimport ErrorBoundary from 'Components/ErrorBoundry';\nimport { Rnd } from 'react-rnd'\nimport { LazyComponent } from 'redux/common';\n// import { PDFPreview } from './PDFPreview';\nconst PDFPreview = lazy(() => import('Routes/Chat/Main/UserChat/PDFPreview'));\n\nexport default function PopupMedia({ showModal, data, onClose }) {\n    const [scale, setScale] = useState(1);\n    const [state, setState] = useState({\n        bounds: { left: 0, top: 0, bottom: 0, right: 0 },\n        disabled: false,\n        height: 200, width: 200\n    });\n    if (!showModal) return;\n    const { disabled } = state; // height, width\n    return (\n        <ErrorBoundary>\n            <Rnd\n                style={{\n                    backgroundColor: disabled || !isMobile ? 'grey' : 'red',\n                    zIndex: 1025,\n                    maxHeight: '90vh', maxWidth: '100vw', minHeight: '20vh', minWidth: '20vw',\n                    overflow: 'hidden'\n                }}\n                disableDragging={disabled}\n            >\n                <div className=\"modal-content h-100\" style={{ maxHeight: '90vh', maxWidth: '100vw' }}>\n                    <div className=\"modal-header d-inline-block position-relative\"\n                        style={{ width: \"100%\", cursor: \"move\" }}\n                        onMouseOver={() => {\n                            if (disabled) setState((prev) => ({ ...prev, disabled: false }));\n                        }}\n                        onMouseOut={() => setState((prev) => ({ ...prev, disabled: true, }))}\n                        onTouchStart={() => setState((prev) => ({ ...prev, disabled: true, }))}\n                        onTouchEnd={() => {\n                            if (disabled) setState((prev) => ({ ...prev, disabled: false }));\n                        }}\n                        onFocus={() => { }}\n                        onBlur={() => { }}\n                    >\n                        <div className=\"modal-title d-flex align-items-center\" style={{ gap: '25px' }}>\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"\n                                style={{ marginLeft: 0 }}\n                                onClick={(e) => {\n                                    if (disabled) setState((prev) => ({ ...prev, disabled: true }));\n                                    onClose(e);\n                                }}>\n                                <span aria-hidden=\"true\">Ã—</span>\n                            </button>\n                            <h5 className='mb-0'>\n                                {data?.mediaType?.startsWith(CONST.MEDIA_TYPE.IMAGE) && 'Image Preview'}\n                                {data?.mediaType?.startsWith(CONST.MEDIA_TYPE.VIDEO) && 'Video Preview'}\n                                {data?.mediaType?.startsWith(\"application/pdf\") && 'PDF Preview'}\n                            </h5>\n                        </div>\n                        {data?.mediaType?.startsWith(\"application/pdf\") &&\n                            <div className='position-absolute pdf-zoom_in_out'>\n                                <button type=\"button\" className=\"btn btn-info p-4_8 border-0 mr-1\" onClick={() => setScale(prev => prev + .2)}>\n                                    <ZoomIn size={18} />\n                                </button>\n                                <button type=\"button\" className=\"btn btn-info p-4_8 border-0\" onClick={() => setScale(prev => prev - .2)}>\n                                    <ZoomOut size={18} />\n                                </button>\n                            </div>}\n                    </div>\n                    {/* hide-scrollbar */}\n                    <div className=\"modal-body p-0\" style={{ overflowX: 'hidden', overflowY: 'auto', maxWidth: '100%' }} onTouchStart={() => setState((prev) => ({ ...prev, disabled: true, }))}>\n                        <div className=\"h-100\" style={{ overflowX: 'auto', maxWidth: '100%' }}>\n                            {data?.mediaType?.startsWith(CONST.MEDIA_TYPE.IMAGE) && <img src={data?.mediaUrl} alt=\"\" />}\n                            {data?.mediaType?.startsWith(CONST.MEDIA_TYPE.VIDEO) &&\n                                <video width=\"100%\" controls>\n                                    <source src={data?.mediaUrl} type=\"video/mp4\" />\n                                    <source src={data?.mediaUrl} type=\"video/ogg\" />\n                                    Your browser does not support the video tag.\n                                </video>}\n                            {data?.mediaType?.startsWith(\"application/pdf\") &&\n                                <ErrorBoundary>\n                                    <LazyComponent>\n                                        <PDFPreview data={data} scale={scale} setScale={setScale} />\n                                    </LazyComponent>\n                                </ErrorBoundary>}\n                        </div>\n                    </div>\n                </div>\n            </Rnd>\n        </ErrorBoundary>\n\n    )\n}"],"names":["PDFPreview","lazy","PopupMedia","_ref","_data$mediaType","_data$mediaType2","_data$mediaType3","_data$mediaType4","_data$mediaType5","_data$mediaType6","_data$mediaType7","showModal","data","onClose","scale","setScale","useState","state","setState","bounds","left","top","bottom","right","disabled","height","width","_jsx","ErrorBoundary","children","Rnd","style","backgroundColor","isMobile","zIndex","maxHeight","maxWidth","minHeight","minWidth","overflow","disableDragging","_jsxs","className","cursor","onMouseOver","prev","onMouseOut","onTouchStart","onTouchEnd","onFocus","onBlur","gap","type","marginLeft","onClick","e","mediaType","startsWith","CONST","MEDIA_TYPE","IMAGE","VIDEO","ZoomIn","size","ZoomOut","overflowX","overflowY","src","mediaUrl","alt","controls","LazyComponent"],"sourceRoot":""}